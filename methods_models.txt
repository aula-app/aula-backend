MODEL TOPIC

public function __construct($db, $crypt, $syslog)

Getters

public function getTopicBaseData ($topic_id)
public function getTopics ($offset, $limit, $orderby=3, $asc=0, $status=1, $extra_where="", $room_id=0, $phase_id = -1)
public function getTopicsByRoom ($offset, $limit, $orderby=3, $asc=0, $status=1, $room_id)
public function getTopicsByPhase ($offset, $limit, $orderby=3, $asc=0, $status=1, $phase_id, $room_id = 0)
public function getTopicPhase ($topic_id)

Setters

public function setTopicStatus($topic_id, $status, $updater_id = 0)
public function setTopicOrder($topic_id, $order_importance = 10, $updater_id = 0)
public function setTopicName($topic_id, $name, $updater_id=0)
public function setTopicProperty ($topic_id, $property, $propvalue, $updater_id=0)
public function setTopicRoom ($topic_id, $room_id, $updater_id=0)
public function setTopicPhase ($topic_id, $phase_id, $updater_id=0)
public function setTopictoReview ($topic_id, $updater_id)
public function setTopicDescription($topic_id, $description, $type = 0, $updater_id = 0)
public function setTopicPhaseDurations ($topic_id, $phase_duration_0 = -1, $phase_duration_1 = -1, $phase_duration_2 = -1, $phase_duration_3 = -1, $phase_duration_4 = -1, $updater_id = 0)
public function setSpecificTopicPhaseDuration ($topic_id, $phase_duration_id, $duration, $updater_id = 0)
public function setTopicToVotingOnly ($topic_id, $phase_duration, $updater_id = 0)

Checkers

Actions

public function editTopic ($name, $description_internal, $description_public, $status = 1, $order_importance=10, $updater_id=0, $room_id=0, $wild_ideas_enabled = 1, $phase_id = -1, $phase_duration_0= -1,  $phase_duration_1= -1, $phase_duration_2 = -1, $phase_duration_3 = -1, $phase_duration_4 = -1)
public function reportTopic ($topic_id, $user_id, $updater_id, $reason ="")
public function archiveTopic ($topic_id, $updater_id)
public function activateTopic ($topic_id, $updater_id)
public function deactivateTopic ($topic_id, $updater_id)
public function addTopic ($name, $description_internal, $description_public, $status, $order_importance=10, $updater_id=0, $room_id=0)
public function removeDelegationsTopic ($topic_id)
public function deleteTopic($topic_id, $updater_id=0)


MODEL IDEA

public function __construct($db, $crypt, $syslog)

Getters

public function getIdeaBaseData($idea_id)
public function getIdeaContent ($idea_id)
public function getIdeaNumberVotes ($idea_id)
public function getIdeaVotes ($idea_id)
public function getIdeaTopic ($idea_id)
public function getIdeaRoom ($idea_id)
public function getIdeaLikes ($idea_id)
public function getIdeaStatus ($idea_id)
public function getPersonalVoteStatus ($user_id, $idea_id, $topic_id)
public function getIdeaHashId($idea_id)
public function getIdeasByTopic ($offset, $limit, $orderby=3, $asc=0, $status=1, $topic_id)
public function getIdeasByCategory ($offset, $limit, $orderby=3, $asc=0, $status=1, $topic_id)
public function getIdeas ($offset, $limit, $orderby=3, $asc=0, $status=1, $extra_where="", $room_id=0)
public function getIdeasByRoom ($offset, $limit, $orderby=3, $asc=0, $status=1, $room_id)
public function getIdeasByGroup ($offset, $limit, $orderby=3, $asc=0, $status = -1, $group_id, $room_id = -1)
public function getIdeasByUser ($offset, $limit, $orderby=3, $asc=0, $status=-1, $user_id, $room_id=-1
public function getVoteValue ($user_id, $idea_id)
public function getLikeStatus ($user_id, $idea_id)
public function getUserInfiniteVotesStatus($user_id)

Setters

public function setIdeatoReview ($idea_id, $updater_id)
public function setIdeaStatus($idea_id, $status, $updater_id=0)
public function setCategoryStatus($category_id, $status, $updater_id=0)
public function setIdeaRoom($idea_id, $room_id, $updater_id=0)
public function setIdeaProperty ($idea_id, $property, $prop_value, $updater_id=0)
public function setContent($idea_id, $content, $updater_id=0)
public function setCategory($idea_id, $category_id, $updater_id=0)
public function setVoteUser ($user_id, $idea_id, $vote_value, $number_of_delegations=0, $group_vote_bias)
public function setToWinning ($idea_id, $updater_id=0)
public function setToLosing ($idea_id, $updater_id=0)
public function IdeaSetVotes ($idea_id, $votes)
public function setIdeaInfo($idea_id, $content, $updater_id=0)

Checkers

Actions

public function reportIdea ($idea_id, $user_id, $updater_id, $reason ="")
public function suspendIdea ($idea_id, $updater_id)
public function archiveIdea ($idea_id, $updater_id)
public function activateIdea ($idea_id, $updater_id)
public function deactivateIdea ($idea_id, $updater_id)
public function addIdeaToTopic ($idea_id, $topic_id, $updater_id)
public function addIdeaToCategory ($idea_id, $category_id, $updater_id=0)
public function moveIdeaBetweenTopics ($idea_id, $topic_id1, $topic_id2, $updater_id)
public function removeIdeaFromTopic($topic_id, $idea_id)
public function removeIdeaFromCategory($category_id, $idea_id)
public function removeAllIdeasFromTopic ($topic_id)
public function removeAllIdeasFromCategory ($category_id)
public function addIdea ($content, $user_id, $status, $order_importance=10, $updater_id=0, $votes_available_per_user=1, $info="", $room_id=0)
public function editIdea ($idea_id, $content, $status=1, $votes_available_per_user=1, $info="", $order_importance=10, $room_id=0, $updater_id=0)
public function addCategory ($name, $description_public, $description_internal, $status, $order_importance=10, $room_id=0, $updater_id=0)
public function removeCategory ($category_id, $updater_id)
public function approveIdea ($idea_id, $updater_id=0)
public function disapproveIdea ($idea_id, $updater_id=0)
public function IdeaSetNumberOfVotesGiven ($idea_id, $votes)
public function IdeaSetLikes ($idea_id, $likes)
public function IdeaAddLike ($idea_id, $user_id)
public function IdeaRemoveLike ($idea_id, $user_id)
public function resetVotes ()
public function removeLikeUser ($user_id, $idea_id)
public function userHasDelegated($user_id, $topic_id)
public function voteForIdea($idea_id, $vote_value, $user_id, $comment)
public function RevokeVoteFromIdea($idea_id, $user_id, $updater_id=0)
public function deleteIdea($idea_id, $updater_id=0)


MODEL USER

public function __construct($db, $crypt, $syslog)


Getters

public function getUserBaseData($user_id)
public function getUserHashId($user_id)
public function getUsers($offset, $limit, $orderby=3, $asc=0, $status=1, $extra_where="")
public function getReceivedDelegations ($user_id, $topic_id)
public function getGivenDelegations ($user_id, $topic_id)
public function getUserInfiniteVotesStatus($user_id)
public function getUserLastLogin($user_id)
public function getUserAbsence($user_id)
public function getGivenConsents ($user_id)
public function getNecessaryConsents ()
public function getMissingConsents ($user_id)

Setters

public function setUserProperty ($user_id, $property, $prop_value, $updater_id=0)
public function setUserLevel($user_id, $userlevel=10, $updater_id=0)
public function setUserAbout($user_id, $about, $updater_id=0)
public function setUserPosition($user_id, $userposition, $updater_id=0)
public function setUserRealname($user_id, $realname, $updater_id=0)
public function setUserDisplayname($user_id, $displayname, $updater_id=0)
public function setUserEmail($user_id, $email, $updater_id=0)
public function setUserPW($user_id, $pw, $updater_id=0)
public function setUserRegStatus($user_id, $regstatus, $updater_id=0)
public function setUserInfiniteVote($user_id, $infinite, $updater_id=0)
public function setUserStatus($user_id, $status, $updater_id=0)
public function setUserAbsence ($user_id, $presence = 1, $absent_until = "", $auto_delegation = 0)

Checkers

public function revokeVoteRight($user_id, $user_id_target, $topic_id, $updater_id)
public function delegateVoteRight ($user_id, $user_id_target, $topic_id, $updater_id)
public function setDelegationStatus ($user_id, $status, $topic_id = 0, $target = 0)
public function checkLogin ($username, $pw)
public function checkCredentials($username, $pw)  // pw = clear text
public function checkUserExistsByUsername($username)
public function checkHasUserGivenConsentsForUsage ($user_id)

Actions

public function giveBackAllDelegations ($user_id, $topic_id = 0)
public function giveBackDelegation ($my_user_id, $user_id_original, $topic_id = 0)
public function removeSpecificDelegation ($user_id_target, $user_id_original, $topic_id = 0)
public function removeUserDelegations ($user_id, $topic_id = 0, $target = 0)
public function moveUserBetweenRooms ($user_id, $room_id1, $room_id2, $updater_id)
public function moveUserBetweenGroups ($user_id, $group_id1, $group_id2, $updater_id)
public function followUser ($user_id, $user_id_target)
public function unfollowUser ($user_id, $user_id_target)
public function friendUser ($user_id, $user_id_target)
public function unfriendUser ($user_id, $user_id_target)
public function blockUser ($user_id, $user_id_target)
public function unblockUser ($user_id, $user_id_target)
public function relateUser($user_id, $user_id_target, $status=1, $updater_id=0, $type=1)
public function removeUserRelation($user_id, $user_id_target)
public function addUserToGroup($user_id, $group_id, $status, $updater_id)
public function addUser($realname, $displayname, $username, $email, $password, $status=1,  $about_me="", $updater_id=0, $userlevel=10)
public function addUserToRoom($user_id, $room_id, $status, $updater_id)
public function removeUserFromRoom($room_id, $user_id)
public function removeUserFromGroup($group_id, $user_id)
public function editUser($user_id, $realname, $displayname, $username, $email, $about_me="", $position="", $userlevel, $updater_id=0)
public function grantInfiniteVotesToUser ($user_id)
public function revokeInfiniteVotesFromUser ($user_id)
public function suspendUser ($user_id, $updater_id=0)
public function activateUser ($user_id, $updater_id=0)
public function deactivateUser ($user_id, $updater_id=0)
public function archiveUser ($user_id, $updater_id=0)
public function deleteUser($user_id, $updater_id=0)
public function setUserAbsence ($user_id, $presence = 1, $absent_until = "", $auto_delegation = 0)
public function giveConsent ($user_id, $text_id, $consent_value = 1, $updater_id = 0)
public function revokeConsent ($user_id, $text_id)
public function setUserConsent ($user_id, $text_id, $consent, $status=1, $updater_id=0)



MODEL ROOM

public function __construct($db, $crypt, $syslog)

Getters

public function getRoomBaseData($room_id)
public function getNumberOfUsers($room_id)
public function getNumberOfTopics($room_id)
public function getNumberOfIdeas($room_id)
public function getRoomHashId($room_id)
public function getRooms($offset, $limit, $orderby=3, $asc=0, $status=1)
public function getRoomsByUser($user_id, $offset=0, $limit=0, $orderby=3, $asc=0, $status=1)
public function getUsersInRoom($room_id, $status=1)

Setters

public function setRoomProperty ($room_id, $property, $prop_value, $updater_id=0)
public function setRoomIdeasDisabled ($room_id, $updater_id=0)
public function setRoomIdeasEnabled ($room_id, $updater_id=0)
public function setRoomStatus($room_id, $status, $updater_id=0)
public function setRoomDescriptionPublic($room_id, $about, $updater_id=0)
public function setRoomDescriptionInternal($room_id, $about, $updater_id=0)
public function setRoomname($room_id, $room_name, $updater_id=0)
public function setRoomAccesscode($room_id, $access_code, $updater_id=0)

Checkers

public function checkAccesscode($room_id, $access_code)// access_code = clear text
public function checkRoomExistsByName($room_name)

Action

public function deleteRoomDelegations ($room_id)
public function deleteRoomUserDelegations ($room_id, $user_id)
public function emptyRoom($room_id)
public function addRoom($room_name, $description_public="", $description_internal="", $internal_info="", $status=1, $access_code="", $restricted=1, $order_importance=10, $updater_id=0)
public function editRoom ($room_id, $room_name, $description_public="", $description_internal="", $internal_info="", $status=1, $access_code="", $restricted=1, $order_importance= 10, $updater_id=0)
public function deleteRoom($room_id, $mode=0, $msg="", $updater_id=0)


MODEL GROUP

public function __construct($db, $crypt, $syslog)

Getters

public function getGroups($offset, $limit, $orderby, $asc, $status=1)
public function getGroupBaseData($group_id)
public function getGroupHashId($group_id)
public function getGroupVoteBias ($group_id)
public function getGroupVoteBiasForUser ($user_id)
public function getUsersInGroup($group_id, $status=1)

Setters

public function setGroupProperty ($group_id, $property, $prop_value, $updater_id=0)
public function setGroupStatus($group_id, $status, $updater_id=0)
public function setGroupVoteBias ($group_id, $vote_bias=1, $updater_id=0)
public function setGroupVotesPerUser ($group_id, $votes, $updater_id=0)
public function setGroupDescriptionPublic($group_id, $about, $updater_id=0)
public function setGroupDescriptionInternal($group_id, $about, $updater_id=0)
public function setGroupname($group_id, $group_name, $updater_id=0)
public function setGroupAccesscode($group_id, $access_code, $updater_id=0)

Checkers

public function checkAccesscode($group_id, $access_code)// access_code = clear text

Actions

public function emptyGroup($group_id)
public function addGroup($group_name, $description_public, $description_internal, $internal_info, $status, $access_code, $updater_id=0, $order_importance=10, $vote_bias=1)
public function editGroup ($group_id, $group_name, $description_public="", $description_internal="", $internal_info="", $status=1, $access_code="", $vote_bias=1, $order_importance=10, $updater_id=0)
public function deleteGroup($group_id, $updater_id=0)



MODEL MESSAGE

public function __construct($db, $crypt, $syslog)

Getters

public function getMessageHashId($message_id)
public function getMessagesByRoom ($offset=0, $limit=0, $orderby=3, $asc=0, $status=1, $room_id)
public function getMessageBaseData ($message_id)
public function getMessagesByUser ($user_id, $publish_date=0)
public function getMessagesToReview ($user_id=0, $publish_date=0)
public function getSuspendedMessages ($user_id=0, $publish_date=0)
public function getMessages ($offset=0, $limit=0, $orderby=3, $asc=0, $status=1, $extra_where="", $publish_date=0, $target_group=0, $room_id=0, $user_id=0, $creator_id=0)

Setters

public function setMessagetoReview ($message_id, $updater_id)
public function setMessageStatus($message_id, $status, $updater_id = 0)

Checkers

Actions

public function reportMessage ($message_id, $user_id, $updater_id, $reason ="")
public function archiveMessage ($message_id, $updater_id=0)
public function suspendMessage ($message_id, $updater_id=0)
public function activateMessage ($message_id, $updater_id)
public function deactivateMessage ($message_id, $updater_id)
public function sendMessageToUser ($user_id, $msg, $publish_date=0)
public function addMessage ($headline, $body, $msg_type, $publish_date, $creator_id=0, $target_group=0, $target_id=0, $pin_to_top=0, $level_of_detail=1, $only_on_dashboard=0, $status=1, $room_id=0, $updater_id=0, $language_id=0)
public function deleteMessage ($message_id, $updater_id=0)


MODEL COMMENT

public function __construct($db, $crypt, $syslog)

Getters

public function getCommentBaseData ($comment_id)
public function getCommentsByUser ($user_id, $publish_date=0, $idea_id=0)
public function getCommentsByParent ($user_id, $publish_date=0, $parent_id=0)
public function getCommentsToReview ($user_id=0, $publish_date=0, $idea_id=0, $parent_idea=0)
public function getSuspendedComments ($user_id=0, $publish_date=0, $idea_id=0, $parent_idea=0)
public function getComments ($offset=0, $limit=0, $orderby=3, $asc=0, $status=1, $extra_where="", $last_update=0, $idea_id=0, ,$parent_id=0, $user_id=0)
public function getCommentHashId($comment_id)
public function getCommentsByIdeaId ($idea_id, $offset=0, $limit=0, $orderby=3, $asc=0, $status=1)

Setters
public function setCommentStatus($comment_id, $status, $updater_id = 0)
public function setCommenttoReview ($comment_id, $updater_id)
public function setCommentContent($comment_id, $content, $updater_id = 0)

Checkers

Actions

public function archiveComment ($comment_id, $updater_id=0)
public function activateComment ($comment_id, $updater_id=0)
public function deactivateComment ($comment_id, $updater_id)
public function suspendComment ($comment_id, $updater_id)
public function addComment ($content, $user_id, $idea_id=0, $parent_id=0, $status=1, $updater_id=0, $language_id=0)
public function reportComment ($comment_id, $user_id, $updater_id, $reason ="")
public function deleteComment ($comment_id, $updater_id=0)

MODEL / CLASS CONVERTERS

public function __construct($db)

Getters

public function getIdeaHashId($idea_id)
public function getUserIdByHashId($hash_id)
public function getIdeaIdByHashId($hash_id)
public function getTopicIdByHashId($hash_id)
public function getMessageIdByHashId($hash_id)
public function getRoomIdByHashId($hash_id)
public function getGroupIdByHashId($hash_id)
public function getCategoryIdByHashId($hash_id)
public function getTotalDatasets ($table, $extra_where="")
public function getTotalDatasetsFree ($query)
public function getServiceIdByHashId($hash_id)
public function getCommentIdByHashId($hash_id)
public function getTextIdByHashId($text_id)
public function getTextConsentValue ($text_id)
public function getGlobalPhaseDurations ()
public function getMediaIdByHashId($hash_id)
public function getLastDataChange ()
public function getToday ()
public function getYesterday ()
public function getNow ()
public function getThisMonth ()
public function getLastMonth ()
public function getlastWeek ()
public function getThisYear ()
public function getLastYear ()

Setters

Checkers

public function checkUserId ($user_id)
public function checkGroupId ($group_id)
public function checkIdeaId ($idea_id)
public function checkRoomId ($room_id)
public function checkTopicId ($topic_id)
public function checkTextId ($text_id)
public function checkMediaId ($media_id)
public function checkMessageId ($message_id)
public function checkCategoryId ($category_id)
public function checkTopicExist($topic_id)
public function checkUserExist($user_id)
public function checkGroupExist($group_id)
public function checkRoomExist($room_id)
public function checkIdeaExist($idea_id)
public function checkCategoryExist($category_id)
public function setLastDataChange ()

Actions
public function setSpecificGlobalPhaseDuration ($phase_id, $duration, $updater_id = 0)
public function editSpecificGlobalPhase ($phase_id, $duration, $name, $description_internal, $description_public, $time_scale = 0, $status = 1, $updater_id = 0)

MODEL TEXT

public function __construct($db, $crypt, $syslog)

Getters

public function getTextHashId($text_id)
public function getTextBaseData ($text_id)
public function getTexts ($offset=0, $limit=0, $orderby=3, $asc=0, $status=1, $extra_where="", $last_update=0, $location=0, $creator_id=0, $user_needs_to_consent=-1, $service_id_consent=-1)

Setters
public function setTextToReview ($text_id, $updater_id)
public function setTextStatus($text_id, $status, $updater_id = 0)
public function setTextNeedsConsent($text_id, $user_needs_to_consent, $updater_id = 0)
public function setTextContent($text_id, $headline, $body, $consent_text, $updater_id = 0)

Checkers

Actions
public function archiveText ($text_id, $updater_id=0)
public function activateText ($text_id, $updater_id=0)
public function deactivateText ($text_id, $updater_id)
public function searchInTexts ($searchstring, $status=1)
public function addText ($headline, $body="", $consent_text="", $location=0, $creator_id=0, $user_needs_to_consent=0, $service_id_consent=0, $status=1, $updater_id=0, $language_id=0)
public function linkTextToService ($text_id, $service_id_consent, $updater_id = 0)
public function deleteText ($text_id, $updater_id=0)
public function editText ($text_id, $headline, $body, $consent_text, $location, $creator_id, $user_needs_to_consent, $service_id_consent, $status, $updater_id=0, $language_id=0)


MODEL MEDIA

public function __construct($db, $crypt, $syslog)

Getters
public function getMediaHashId($media_id)
public function getMediaStatus ($media_id)
public function getMediaBaseData ($media_id)
public function getMedia ($offset=0, $limit=0, $orderby=3, $asc=0, $status=1, $extra_where="", $last_update=0, $location=0, $updater_id=0)


Setters
public function setMediaToReview ($media_id, $updater_id)
public function setMediaStatus($media_id, $status, $updater_id = 0)
public function setMediaContent($media_id, $name, $description, $updater_id = 0)


Checkers


Actions
public function archiveMedia ($media_id, $updater_id=0)
public function activateMedia ($media_id, $updater_id=0)
public function deactivateMedia ($media_id, $updater_id)
public function searchInMedia ($searchstring, $status=1)
public function addMedia ($name, $url, $path, $type, $system_type, $filename, $description="", $status=1, $updater_id=0)
public function deleteMedia ($media_id, $updater_id=0)


MODEL SERVICE

public function __construct($db, $crypt, $syslog)

Getters
public function getServiceHashId($service_id)
public function getServiceStatus ($service_id)
public function getServiceBaseData ($service_id)
public function getServices ($offset=0, $limit=0, $orderby=3, $asc=0, $status=1, $extra_where="", $last_update=0)

Setters
public function setServiceStatus($service_id, $status, $updater_id = 0)
public function setServiceContent($service_id, $name, $description_internal, $description_public, $updater_id = 0)
public function setServiceToReview ($service_id, $updater_id)

Checkers


Actions

public function archiveService ($service_id, $updater_id=0)
public function activateService ($service_id, $updater_id=0)
public function deactivateService ($service_id, $updater_id)
public function searchInServices ($searchstring, $status=1)
public function addService ($name, $url, $return_url, $type, $api_key, $api_tok, $api_secret, $status=1, $order_importance=10, $description_public="", $description_internal="", $parameter1="", $parameter2="", $parameter3="", $parameter4="", $parameter5="", $parameter6="", $updater_id=0)
public function deleteMedia ($service_id, $updater_id=0)
